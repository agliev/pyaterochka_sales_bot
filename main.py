import telebot
from telebot import types
from telebot.types import InputMediaPhoto
from secrets import TOKEN
from functions import get_logger, get_categories, get_closest_store, get_products, get_product_image

cat_types_dict = get_categories()

bot = telebot.TeleBot(TOKEN)
logger = get_logger('pyaterochka_bot')

logger.debug(f'Initialized')
prod_category = "–ó–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã"


@bot.message_handler(commands=["start", '—Å—Ç–∞—Ä—Ç'])
def welcome(message):

    # –ü–µ—Ä–≤—ã–µ –∫–Ω–æ–ø–∫–∏, —Å–æ–∑–¥–∞–Ω—ã –≤ —Ä–∞–º–∫–∞—Ö —Ç–µ—Å—Ç–∞
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    cat = types.KeyboardButton('/categories')
    aksii = types.KeyboardButton('/aksii')

    markup.add(cat, aksii)

    # –û—Ç–ø—Ä–∞–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ –±–æ—Ç–∞
    bot.send_message(message.from_user.id,
                     f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}. –î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —É–∑–Ω–∞—Ç—å - –Ω–∞ –∫–∞–∫–∏–µ —Ç–æ–≤–∞—Ä—ã —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ—Ö–æ–¥–∏—Ç –∞–∫—Ü–∏—è –≤ –±–ª–∏–∂–∞–π—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –ü—è—Ç–µ—Ä–æ—á–∫–∞.–° –ø–æ–º–æ—â—å—é –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤, –∞ –ø–æ—Å–ª–µ —É–∑–Ω–∞—Ç—å –æ –Ω–∞–ª–∏—á–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∞–∫—Ü–∏–∏ :)\n\n–£–∑–Ω–∞—Ç—å –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å–º–µ–Ω–∏—Ç—å –µ–µ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É - /categories\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É—Ö–Ω–∞—Ç—å –æ —Å–∫–∏–¥–∫–∞—Ö –≤ –±–ª–∏–∂–µ–π—à–µ–π –ü—è—Ç–µ—Ä–æ—á–∫–µ, –æ—Ç–ø—Ä–∞–≤—å /aksii.\n\n–ú–æ–∂–µ—Ç–µ –∫–∞–∫ –ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, —Ç–∞–∫ –∏ –Ω–∞–∂–∏–º–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ :)',
                     reply_markup=markup)

    logger.debug(f'Called function welcome {message.from_user.name}')


@bot.message_handler(commands=['categories', '–∫–∞—Ç–µ–≥–æ—Ä–∏–∏'])
def first_step(message):
    
    # –ö–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã —Å —Ü–µ–ª—å—é –æ–±–ª–µ–≥—á–∏—Ç—å —É–∫–∞–∑–∞–Ω–∏–µ –ø–æ–ª—å—â–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        # buttons = types.ReplyKeyboardMarkup(resize_keyboard=True)
        # first = types.KeyboardButton('–ù–∞ –∫–∞—Å—Å–µ')
        # second = types.KeyboardButton('–ó–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã')
        # buttons.add(first, second)

    bot.send_message(message.from_user.id,
                     f'–í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç - {prod_category}.\n\n–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ\n\n–ù–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:\n–ù–∞ –∫–∞—Å—Å–µ, –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ —è–π—Ü–∞, –û–≤–æ—â–∏ –∏ —Ñ—Ä—É–∫—Ç—ã, –•–ª–µ–± –∏ –≤—ã–ø–µ—á–∫–∞, –ì–æ—Ç–æ–≤—ã–µ –±–ª—é–¥–∞ –∏ –∫—É–ª–∏–Ω–∞—Ä–∏—è, –ú—è—Å–æ –∏ –ø—Ç–∏—Ü–∞, –ö–æ–ª–±–∞—Å–∞ –∏ —Å–æ—Å–∏—Å–∫–∏, –ó–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –†—ã–±–∞ –∏ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã, –ë–∞–∫–∞–ª–µ—è, –°–Ω–µ–∫–∏, –°–ª–∞–¥–æ—Å—Ç–∏, –ß–∞–π, –∫–æ—Ñ–µ –∏ –∫–∞–∫–∞–æ, –ù–∞–ø–∏—Ç–∫–∏, –ö–æ–Ω—Å–µ—Ä–≤—ã –∏ —Å–æ–ª–µ–Ω—å—è, –¢–æ–≤–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö, –ì–∏–≥–∏–µ–Ω–∞ –∏ —É—Ö–æ–¥, –¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π, –¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞')  # , reply_markup = buttons)

    bot.register_next_step_handler(message, category)
    logger.debug(f'Called function first_step {message.from_user.id}')


def category(message):
    global prod_category
    text = message.text.lower().strip()
    text = text[0].upper() + text[1:]
    print("–í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è " + text)
    if text in cat_types_dict.keys():
        prod_category = text

    else:
        bot.send_message(message.from_user.id,
                         '–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ - /categories')

    # –ö–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã —Å —Ü–µ–ª—å—é –æ–±–ª–µ–≥—á–∏—Ç—å —É–∫–∞–∑–∞–Ω–∏–µ –ø–æ–ª—å—â–æ–≤–∞—Ç–µ–ª–µ–º –∂–µ–ª–∞–µ–º–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    buttons = types.ReplyKeyboardMarkup(resize_keyboard=True)
    cat = types.KeyboardButton('/categories')
    aksii = types.InlineKeyboardButton('/aksii', callback_data=prod_category)
    buttons.add(cat, aksii)

    bot.send_message(message.from_user.id, "–ú–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ü–∏–π —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É - /aksii", reply_markup=buttons)
    logger.debug(f'Called function category {message.from_user.id}')


@bot.message_handler(commands=["aksii", '–∞–∫—Ü–∏–∏'])
def geolocation(message):
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞ –ª–æ–∫–∞—Ü–∏–∏
    keyboard = types.ReplyKeyboardMarkup(row_width=1, one_time_keyboard=True, resize_keyboard=True)
    button_geo = types.KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ üåç", request_location=True)
    keyboard.add(button_geo)
    bot.send_message(message.chat.id, "–ü–æ–¥–µ–ª–∏—Å—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º - —É–∑–Ω–∞–µ—à—å –∞–¥—Ä–µ—Å –±–ª–∏–∂–∞–π—à–µ–π –ü—è—Ç–µ—Ä–æ—á–∫–∏ —Å–æ —Å–∫–∏–¥–∫–∞–º–∏",
                     reply_markup=keyboard)
    logger.debug(f'Called function geolocation {message.from_user.id}')


# –ü–æ–ª—É—á–∞—é –ª–æ–∫–∞—Ü–∏—é
@bot.message_handler(content_types=['location'])
def products(message):
    store = get_closest_store(message.location.latitude, message.location.longitude)
    bot.send_message(message.from_user.id,
                     f"""–ë–ª–∏–∂–∞–π—à–∞—è –ü—è—Ç–µ—Ä–æ—á–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É {store['address']}\n\n–ü–æ–¥—Ä–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∞–∫—Ü–∏–∏...""")
    logger.debug(f'Called function products {message.from_user.id}')

    # –ü–æ–ª—É—á–∞—é —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ, –∑–∞–¥–∞–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏ –ø–æ–º–æ—â–∏ api
    products = get_products(store, category=cat_types_dict[prod_category])
    media = []

    if len(products) > 0:
        for product in products:
            media.append(InputMediaPhoto(media=get_product_image(product)))

            #     –£—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –∞–ª—å–±–æ–º–∞–º–∏, –Ω–µ –±–æ–ª–µ–µ 10 —à—Ç—É–∫ –≤ –∫–∞–∂–¥–æ–º
        if (len(media) // 10) != 0:
            for i in range(len(media) // 10 + 1):
                bot.send_media_group(message.chat.id, media=media[i * 10:(i + 1) * 10])
        else:
            for i in range(len(media) // 10):
                bot.send_media_group(message.chat.id, media=media[i * 10:(i + 1) * 10])



    else:
        bot.send_message(message.from_user.id, "–ü–æ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —ç—Ç–æ–º –º–∞–≥–∞–∑–∏–Ω–µ —Å–∫–∏–¥–æ–∫ –Ω–µ—Ç :(")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def button_answer(message):
    if message.chat.type == 'private':
        if message.text == '–°—Ç–∞–Ω—Ü–∏—è –∑–∞—á–µ—á–Ω–∞—è! üõí':
            bot.send_message(message.chat.id, "–°—Ç–µ–ø–∞ - –º–æ–ª–æ–¥–µ—Ü, –æ–Ω –∫—É–ø–∏–ª –º–æ–ª–æ–∫–æ!")
        elif message.text == '–ü—Ä–æ—Å—Ç–æ –∫–Ω–æ–ø–∫–∞':
            bot.send_message(message.chat.id, "–ù—É –∏ –∑–∞—á–µ–º —Ç—ã –Ω–∞ –Ω–µ–µ –Ω–∞–∂–∞–ª(–∞)?")
        else:
            bot.send_message(message.chat.id, "–£—Ç–æ—á–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å-–°–û–°")


bot.polling(none_stop=True)